{"mappings":"YAAA,IAAMA,EAAO,CACXC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGJC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAmBH,SAASC,cAAc,wBA4BhD,SAASG,EAAcC,EAAUT,GAC/B,OAAO,IAAIU,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUT,UAEpBY,EAAO,CAAEH,WAAUT,S,GAEpBA,E,IApCQI,SAASC,cAAc,QAE/BW,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAiBNnB,EAAKC,MAAQmB,SAAShB,EAAWiB,OACjCrB,EAAKE,KAAOkB,SAASb,EAAUc,OAC/BrB,EAAKG,OAASiB,SAASZ,EAAiBa,OAjBxCC,QAAQC,IAAIvB,GACZ,IAAK,IAAIwB,EAAI,EAAGA,GAAKxB,EAAKG,OAAQqB,GAAK,EACrCf,EAAce,EAAGxB,EAAKC,OACnBwB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUT,EAAKyB,EAALzB,MACjBqB,QAAQC,IAAI,uBAAwCI,OAAfjB,EAAS,QAAYiB,OAAN1B,EAAM,M,IAE3D2B,OAAM,SAAAF,G,IAAGhB,EAAQgB,EAARhB,SAAUT,EAAKyB,EAALzB,MAClBqB,QAAQC,IAAI,sBAAqCI,OAAfjB,EAAS,QAAYiB,OAAN1B,EAAM,M,IAG3DD,EAAKC,OAASD,EAAKE,I","sources":["src/js/03-promises.js"],"sourcesContent":["const data = {\n  delay: '',\n  step: '',\n  amount: '',\n};\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountOfPromises = document.querySelector('input[name=\"amount\"]');\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  handleInput();\n  console.log(data);\n  for (let i = 1; i <= data.amount; i += 1) {\n    createPromise(i, data.delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    data.delay += data.step;\n  }\n}\n\nfunction handleInput() {\n  data.delay = parseInt(firstDelay.value);\n  data.step = parseInt(delayStep.value);\n  data.amount = parseInt(amountOfPromises.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$data","delay","step","amount","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountOfPromises","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","parseInt","value","console","log","i","then","param","concat","catch"],"version":3,"file":"03-promises.e0c8bb69.js.map"}